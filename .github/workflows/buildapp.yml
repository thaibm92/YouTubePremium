# Original idea by @ISnackable. Many thanks to him for handling the most hardest parts!
# https://github.com/ISnackable/CercubePlus/blob/main/.github/workflows/Build.yml

name: Build and Release YouTube Premium

on:
  workflow_dispatch:
    inputs:
      decrypted_youtube_url:
        description: "The direct URL to the decrypted YouTube ipa"
        default: "https://iosmod.net/IPAs/YouTube_19.26.5.ipa"
        required: true
        type: string
      bundle_id:
        description: "Modify the bundle ID. Not recommended"
        default: "com.google.ios.youtube"
        required: true
        type: string
      app_name:
        description: "Modify the name of the app on the Home Screen. Not recommended"
        default: "YouTube"
        required: true
        type: string
      commit_id:
        description: "(Optional) Commit ID to build at"
        default: ""
        required: false
        type: string
      upload_artifact:
        description: "Upload Artifact"
        default: true
        required: false
        type: boolean
      upload_artifact_catbox:
        description: "Upload Artifact to Catbox"
        default: true
        required: false
        type: boolean
      create_release:
        description: "Create a draft release"
        default: true
        required: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build YouTube Premium
    runs-on: macos-12
    permissions:
      contents: write

    steps:
      - name: Checkout Main
        uses: actions/checkout@v4.1.6
        with:
          path: main
          ref: ${{ github.event.inputs.commit_id || github.ref }}
          submodules: recursive

      - name: Install Dependencies
        run: brew install ldid dpkg make

      - name: Setup Theos
        uses: actions/checkout@v4.1.6
        with:
          repository: theos/theos
          ref: 3da31488281ecf4394d10302d2629607f4a1aa07
          path: theos
          submodules: recursive

      - name: Caching
        id: SDK
        uses: actions/cache@v4.0.2
        env:
          cache-name: iOS-16.4-SDK
        with:
          path: theos/sdks/
          key: ${{ env.cache-name }}

      - name: Download iOS 16.4 SDK
        if: steps.SDK.outputs.cache-hit != 'true'
        run: |
          git clone -n --depth=1 --filter=tree:0 https://github.com/thaibm92/sdks/
          cd sdks
          git sparse-checkout set --no-cone iPhoneOS16.4.sdk
          git checkout
          mv *.sdk $THEOS/sdks
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Setup Theos Jailed
        uses: actions/checkout@v4.1.6
        with:
          repository: qnblackcat/theos-jailed
          ref: master
          path: theos-jailed
          submodules: recursive
        
      - name: Set PATH environment variable
        run: echo "$(brew --prefix make)/libexec/gnubin" >> $GITHUB_PATH 

      - name: Install Theos Jailed
        run: |
          ./theos-jailed/install
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Clone Extensions & Submodules
        run: |
          cd ${{ github.workspace }}/main
          git clone https://github.com/CokePokes/YoutubeExtensions.git YoutubeExtensions
          git clone https://github.com/PoomSmart/YouTubeHeader.git YouTubeHeader
          
      - name: Build Tweak YouTubePremium
        id: build_package
        run: |
          (echo export PATH="/usr/local/opt/make/libexec/gnubin:$PATH" >> ~/.bash_profile)
          source ~/.bash_profile
          cd ${{ github.workspace }}/main
          make package FINALPACKAGE=1
          Version=$(grep '^Version' control | cut -d' ' -f2)
          echo "Version=$Version" >> $GITHUB_OUTPUT
          echo "==> Built v$Version Successfully."
          
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Fetch Deb Latest Versions of Debs
        id: get_latest_versions
        run: |
          get_latest_release() {
              repo=$1
              response=$(curl -s "https://api.github.com/repos/$repo/releases/latest")
              download_url=$(echo $response | jq -r '.assets[0].browser_download_url')
          
              if [ "$download_url" = "null" ]; then
                  echo "No assets found for the latest release of $repo."
              else
                  echo $download_url
              fi
          }
          
          YOUPIP_URL=$(get_latest_release "thaibm92/YouPiP")
          echo "YouPiP URL: $YOUPIP_URL"
          YOUTUBEDISLIKES_URL=$(get_latest_release "thaibm92/Return-YouTube-Dislikes")
          echo "Return YouTube Dislikes URL: $YOUTUBEDISLIKES_URL"
          YTUHD_URL=$(get_latest_release "thaibm92/YTUHD")
          echo "YTUHD URL: $YTUHD_URL"
          YTVIDEOOVERLAY_URL=$(get_latest_release "thaibm92/YTVideoOverlay")
          echo "YTVideoOverlay URL: $YTVIDEOOVERLAY_URL"
          YOUMUTE_URL=$(get_latest_release "thaibm92/YouMute")
          echo "YouMute URL: $YOUMUTE_URL"
          YOUQUALITY_URL=$(get_latest_release "thaibm92/YouQuality")
          echo "YouQuality URL: $YOUQUALITY_URL"
          
          echo "YOUPIP_URL=$YOUPIP_URL" >> $GITHUB_ENV
          echo "YOUTUBEDISLIKES_URL=$YOUTUBEDISLIKES_URL" >> $GITHUB_ENV
          echo "YTUHD_URL=$YTUHD_URL" >> $GITHUB_ENV
          echo "YTVIDEOOVERLAY_URL=$YTVIDEOOVERLAY_URL" >> $GITHUB_ENV
          echo "YOUMUTE_URL=$YOUMUTE_URL" >> $GITHUB_ENV
          echo "YOUQUALITY_URL=$YOUQUALITY_URL" >> $GITHUB_ENV
          
      - name: Downloading YouTube IPA & DEBs
        run: |
          wget "$YOUTUBE_URL" --no-verbose -O main/YouTube.ipa
          wget "${{ env.YOUPIP_URL }}" --no-verbose -O main/packages/YouPiP.deb
          wget "${{ env.YOUTUBEDISLIKES_URL }}" --no-verbose -O main/packages/YouTubeDislikesReturn.deb
          wget "${{ env.YTUHD_URL }}" --no-verbose -O main/packages/YTUHD.deb
          wget "${{ env.YTVIDEOOVERLAY_URL }}" --no-verbose -O main/packages/YTVideoOverlay.deb
          wget "${{ env.YOUMUTE_URL }}" --no-verbose -O main/packages/YouMute.deb
          wget "${{ env.YOUQUALITY_URL }}" --no-verbose -O main/packages/YouQuality.deb
        env:
          YOUTUBE_URL: ${{ inputs.decrypted_youtube_url }}
          
      - name: Install Azule
        run: |
          cd ${{ github.workspace }}/main
          git clone https://github.com/Al4ise/Azule 
          sudo ln -sf ~/Azule/azule /usr/local/bin/azule
          
      - name: Inject Tweak into IPA
        run: |
          brew install coreutils
          cd ${{ github.workspace }}/main
          ./Azule/azule -i $PWD/YouTube.ipa -o $PWD/packages/YouTubePremium.ipa -f $PWD/packages/*.deb

      - name: Prepare YouTube iPA
        id: prepare_youtube
        run: |
          mv main/packages/YouTubePremium.ipa main/packages/YouTubePremium.zip
          unzip -q main/packages/YouTubePremium.zip -d main/packages
          youtube_version=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" "main/packages/Payload/YouTube.app/Info.plist")
          echo "==> YouTube v$youtube_version Unziped!"
          echo "youtube_version=${youtube_version}" >> $GITHUB_OUTPUT
          rm -rf main/packages/Payload/YouTube.app/_CodeSignature/CodeResources
          rm -rf main/packages/Payload/YouTube.app/PlugIns/*
          cp -rf main/YoutubeExtensions/*.appex main/packages/Payload/YouTube.app/PlugIns
          echo "==> Added YouTube Extension!"
          cd ${{ github.workspace }}/main/packages
          zip -r YouTubePremium_$youtube_version.ipa Payload > /dev/null
          echo "==> YouTubePremium_$youtube_version.ipa Ziped!"

      - name: Upload Artifact
        if: ${{ inputs.upload_artifact }}
        uses: actions/upload-artifact@v4.3.3
        with:
          name: YouTubePremium_${{ steps.prepare_youtube.outputs.youtube_version }}
          path: |
            main/packages/${{steps.build_package.outputs.tweakName}}
            main/packages/YouTubePremium_${{steps.prepare_youtube.outputs.youtube_version}}.ipa
          if-no-files-found: error

      - name: Upload Artifact to Catbox
        if: ${{ inputs.upload_artifact_catbox }}
        run: |
          RESPONSE_IPA=$(curl -F "reqtype=fileupload" -F "fileToUpload=@main/packages/YouTubePremium_${{steps.prepare_youtube.outputs.youtube_version}}.ipa" https://catbox.moe/user/api.php)
          CATBOX_URL_IPA=$(echo $RESPONSE_IPA | grep -o -E 'https://files.catbox.moe/[^"]*')
          RESPONSE_DEB=$(curl -F "reqtype=fileupload" -F "fileToUpload=@main/packages/${{steps.build_package.outputs.tweakName}}" https://catbox.moe/user/api.php)
          CATBOX_URL_DEB=$(echo $RESPONSE_DEB | grep -o -E 'https://files.catbox.moe/[^"]*')
          echo "Uploaded .ipa artifact to $CATBOX_URL_IPA"
          echo "Uploaded .deb artifact to $CATBOX_URL_DEB"
      
      - name: Create Release
        if: ${{ inputs.create_release }}
        id: create_release
        uses: softprops/action-gh-release@v2.0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DRAFT: ${{ inputs.create_release }}
        with:
          tag_name: v${{ steps.prepare_youtube.outputs.youtube_version }}-${{ steps.build_package.outputs.Version }}
          name: v${{ steps.prepare_youtube.outputs.youtube_version }}-${{ steps.build_package.outputs.Version }}
          files: |
            main/packages/${{steps.build_package.outputs.tweakName}}
            main/packages/YouTubePremium_${{steps.prepare_youtube.outputs.youtube_version}}.ipa
          draft: ${{ env.DRAFT }}
    
